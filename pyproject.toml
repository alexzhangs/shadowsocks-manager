[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "shadowsocks-manager"
version = "0.1.17"
requires-python = ">=3.8"
dependencies = [
    "future",
    "six",
    "boto3",
    "celery",
    "Django<4",
    "django-admin-easy",

    # 20240531 - enhancement and fix
    # "django-admin-lazy-load",
    "django-admin-lazy-load-alexforks",

    "django-allowedsites-dynamic",
    "django-cache-lock",
    "django-celery-beat",
    "django-celery-results",
    "django-enumfield",
    "django-filter",

    # 20240602 - py3.12 - v4.0.7 - import ERROR: module 'django.utils.formats' has no attribute 'sanitize_strftime_format'
    # 20240602 - py3.12 - v4.0.0 - export ERROR: AttributeError: 'AccountAdmin' object has no attribute 'search_help_text': File import_export/admin.py, line 670: changelist_kwargs["search_help_text"] = self.search_help_text
    # "django-import-export",
    "django-import-export<=3.3.9",

    "djangorestframework",
    "dns-lexicon[full]",
    "dnspython",
    "docopt",

    # required by django
    # 20250506 - py3.13 - cgi module is no longer part of the Python standard library. It was removed in Python 3.13.
    "legacy-cgi; python_version >= '3.13'",

    "psutil",
    "python-crontab",
    "python-decouple",

    # 20240319 - py3.x - workaround for: AttributeError: 'Client' object has no attribute '_deletetouch': File python3.12/site-packages/django/core/cache/backends/memcached.py, line 202
    "python-memcached==1.59",

    "pytz",
    "requests",
    "tldextract",
    "uWSGI",
]
optional-dependencies.test = [
    "coverage[toml]; python_version < '3.11'",
    "coverage; python_version >= '3.11'",
]
optional-dependencies.release = [
    "codecov",
    "build",
    "bump-my-version",
    "setuptools",
    "twine",
    "wheel",
]
authors = [{name = "Alex", email = "alexzhangs@gmail.com"}]
maintainers = []
readme = "README.md"
license = {file = "LICENSE"}
description = "A shadowsocks manager for multi-user and traffic statistics"
keywords = ["shadowsocks", "manager", "django", "web", "statistics", "cluster", "celery", "uwsgi", "pypi", "docker", "github-actions"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Internet :: Proxy Servers",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
    "Topic :: Security :: Cryptography",
    "Topic :: System :: Networking :: Firewalls"
]

[project.urls]
homepage = "https://www.0xbeta.com/shadowsocks-manager/"
repository = "https://github.com/alexzhangs/shadowsocks-manager"
issues = "https://github.com/alexzhangs/shadowsocks-manager/issues"

[project.scripts]
ssm = "shadowsocks_manager.__main__:main"
ssm-manage = "shadowsocks_manager.utils.manage:main"
ssm-uwsgi = "shadowsocks_manager.utils.uwsgi:main"
ssm-celery = "shadowsocks_manager.utils.celery_app:main"
ssm-dotenv = "shadowsocks_manager.utils.dotenv:main"
ssm-version = "shadowsocks_manager.utils.version:main"

[tool.setuptools]
script-files = [
    "bin/ssm-setup",
    "bin/ssm-dev-start",
    "bin/ssm-dev-stop",
]

[tool.setuptools.packages]
find = {}

[tool.setuptools.package-data]
shadowsocks_manager = ["**/fixtures/*"]

[tool.distutils.bdist_wheel]
universal = true

[tool.bumpversion]
current_version = "0.1.17"
parse = """
    (?P<major>\\d+)\\.
    (?P<minor>\\d+)\\.
    (?P<patch>\\d+)
    (
        \\-                         # separator
        (?P<suffix>[0-9]\\d*)       # suffix Number
    )?                              # suffix is optional
"""
serialize = [
    "{major}.{minor}.{patch}-{suffix}",
    "{major}.{minor}.{patch}",
]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = true
sign_tags = false
tag_name = "{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = true
commit = true
message = "Bump version: {current_version} → {new_version}"
commit_args = "--no-verify"

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = '^version = "{current_version}"$'
replace = 'version = "{new_version}"'
regex = true

[[tool.bumpversion.files]]
filename = "setup.cfg"
search = '^version = {current_version}$'
replace = 'version = {new_version}'
regex = true

[[tool.bumpversion.files]]
filename = "shadowsocks_manager/shadowsocks_manager/__init__.py"
search = '^__version__ = "{current_version}"$'
replace = '__version__ = "{new_version}"'
regex = true

[tool.coverage.run]
source = [
    "shadowsocks_manager",
]
branch = true
omit = [
    "**/tasks.py",
    "**/admin.py",
    "**/migrations/*",
    "shadowsocks_manager/manage.py",
    "shadowsocks_manager/shadowsocks_manager/wsgi.py",
]
parallel = true

[tool.coverage.report]
show_missing = true
skip_covered = true
