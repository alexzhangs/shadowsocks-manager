[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "shadowsocks-manager"
version = "0.1.8"
requires-python = ">=2.7"
dependencies = [
    "future",
    "six",
    "boto3",
    "celery",
    "Django<4",

    "django-allowedsites-dynamic",

    "django-cache-lock",

    # 20210314 - py2.7 - workaround for: ERROR: Could not find a version that satisfies the requirement django-timezone-field<5.0,>=4.1.0 (from django-celery-beat->-r requirements.txt (line 10)) (from versions: 0.3.1, 0.3.2, 0.4, 1.0, 1.1, 1.2, 1.3, 2.0rc1, 2.0, 2.1, 3.0rc1, 3.0, 3.1)
    "django-celery-beat==1.6.0; python_version <= '2.7'",
    # 20240319 - py3.8 - workaround for: Exception: django-celery-beat 2.6.0 requires CPython 3.8 or later!
    "django-celery-beat<2.6.0; python_version > '2.7' and python_version < '3.8'",
    "django-celery-beat; python_version >= '3.8'",

    # 20210917 - py2.7 - workaround for: ERROR: django-celery-results 2.2.0 requires celery<6.0,>=5.0, but you'll have celery 4.4.7 which is incompatible.
    "django-celery-results==2.0.1; python_version <= '2.7'",
    "django-celery-results; python_version > '2.7'",

    # 20220622 - py2.7 - workaround for: ImportError: No module named enum
    "django-enumfield<3.0; python_version <= '2.7'",
    "django-enumfield; python_version > '2.7'",

    # 20210314 - py2.7 - workaround for: SyntaxError: invalid syntax: File python2.7/site-packages/django_filters/filterset.py, line 184
    # https://github.com/carltongibson/django-filter/issues/954
    "django-filter~=1.1; python_version <= '2.7'",
    "django-filter; python_version > '2.7'",

    "django-import-export",
    "djangorestframework",
    "docopt",

    # ipaddress is available since Python 3.3
    "ipaddress; python_version < '3.3'",

    "psutil",

    # 20230202 - py2.7
    "python-crontab==2.6.0; python_version <= '2.7'",
    "python-crontab; python_version > '2.7'",

    "python-decouple",

    # 20240319 - py3.x - workaround for: AttributeError: 'Client' object has no attribute '_deletetouch': File python3.12/site-packages/django/core/cache/backends/memcached.py, line 202
    # "python-memcached==1.59; python_version <= '2.7'",
    # "python-memcached; python_version > '2.7'",
    "python-memcached==1.59",

    "pytz",
    "requests",

    # 20240430 - removed. the installation of Shadowsocks service should be handled outside of this project.
    # 20240417 - workaround for: AttributeError: dlsym(0x8c358790, EVP_CIPHER_CTX_cleanup): symbol not found: File python3.12/site-packages/shadowsocks/crypto/openssl.py, line 52
    # 20240417 - py3.10+ - workaround for: AttributeError: module 'collections' has no attribute 'MutableMapping': File python3.12/site-packages/shadowsocks/lru_cache.py, line 34
    # "shadowsocks",
    # "shadowsocks-alexforks",

    "uWSGI",
]
authors = [{name = "Alex", email = "alexzhangs@gmail.com"}]
maintainers = []
readme = "README.md"
license = {file = "LICENSE"}
description = "A shadowsocks manager for multi-user and traffic statistics"
keywords = ["shadowsocks", "manager", "django", "web", "statistics", "cluster", "celery", "uwsgi", "pypi", "docker", "github-actions"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python",
    "Programming Language :: Python :: 2",
    "Programming Language :: Python :: 2.7",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: Proxy Servers",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
    "Topic :: Security :: Cryptography",
    "Topic :: System :: Networking :: Firewalls"
]

[project.optional-dependencies]
dev = [
    "build",
    "bump-my-version",
    "codecov-cli",
    "coverage",
    "setuptools",
    "twine",
    "wheel",
]

[project.urls]
homepage = "https://www.0xbeta.com/shadowsocks-manager/"
repository = "https://github.com/alexzhangs/shadowsocks-manager"
issues = "https://github.com/alexzhangs/shadowsocks-manager/issues"

[project.scripts]
ssm = "shadowsocks_manager.__main__:main"
ssm-manage = "shadowsocks_manager.utils.manage:main"
ssm-uwsgi = "shadowsocks_manager.utils.uwsgi:main"
ssm-celery = "shadowsocks_manager.utils.celery:main"
ssm-createsuperuser = "shadowsocks_manager.utils.createsuperuser:main"
ssm-dotenv = "shadowsocks_manager.utils.dotenv:main"

[tool.setuptools]
script-files = [
    "bin/ssm-setup",
    "bin/ssm-dev-start",
    "bin/ssm-dev-stop",
    "bin/ssm-test",
]

[tool.setuptools.packages]
find = {}

[tool.setuptools.package-data]
shadowsocks_manager = ["fixtures/*", "**/fixtures/*"]

[tool.distutils.bdist_wheel]
universal = true

[tool.bumpversion]
current_version = "0.1.8"
parse = """
    (?P<major>\\d+)\\.
    (?P<minor>\\d+)\\.
    (?P<patch>\\d+)
    (
        \\-                         # separator
        (?P<suffix>[0-9]\\d*)       # suffix Number
    )?                              # suffix is optional
"""
serialize = [
    "{major}.{minor}.{patch}-{suffix}",
    "{major}.{minor}.{patch}",
]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = true
sign_tags = false
tag_name = "{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = true
commit = true
message = "Bump version: {current_version} → {new_version}"
commit_args = "--no-verify"

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = '^version = "{current_version}"$'
replace = 'version = "{new_version}"'
regex = true

[[tool.bumpversion.files]]
filename = "setup.cfg"
search = '^version = {current_version}$'
replace = 'version = {new_version}'
regex = true

[tool.coverage.run]
source = "."
branch = true

[tool.coverage.report]
show_missing = true
skip_covered = true
