name: ci-pypi
on:
  push:
    branches:
      - 'master'
      - '**/*'
    tags:
      - 'ci-pypi'
      - 'ci-pypi-*'
env:
  TWINE_USERNAME: __token__
  TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
jobs:
  pypi-py3-build-and-upload:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.12.3']
    outputs:
      new_version: ${{ steps.bump-version.outputs.new_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: true 
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install build twine bumpversion
      - name: Bump version and tag commit
        id: bump-version
        run: |
          VERSION_PART=$(echo "${GITHUB_REF#refs/tags/}" | awk -F- '{print $3}')
          NEW_VERSION=$(bumpversion "${VERSION_PART:-patch}" --dry-run --list --config-file setup.cfg | grep new_version | cut -d= -f2)
          bumpversion "${VERSION_PART:-patch}" --config-file setup.cfg
          git tag -a "pypi-${NEW_VERSION}" -m "pypi-${NEW_VERSION}"
          git push origin "pypi-${NEW_VERSION}"
          echo "::set-output name=new_version::${NEW_VERSION}"
      - name: Build source and binary distributions
        run: python -m build
      - name: Upload to PyPI
        run: twine upload dist/*

  pypi-py2-build-and-upload:
    runs-on: ubuntu-latest
    needs: [pypi-py3-build-and-upload]
    container:
      image: python:2.7
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install build twine
      - name: Build binary distribution only
        run: python -m build -w
      - name: Upload to PyPI
        run: twine upload dist/*

  pypi-py3-install:
    runs-on: ubuntu-latest
    needs: pypi-py3-build-and-upload
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.12.3']
    env:
      NEW_VERSION: ${{ needs.pypi-py3-build-and-upload.outputs.new_version }}
    steps:
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip install --upgrade pip
      - name: Install from binary distribution
        run: |
          pip install --only-binary shadowsocks-manager shadowsocks-manager==${{ env.NEW_VERSION }}
      - name: Clean up for source distribution
        run: |
          pip list --exclude pip | awk 'NR>2 {print $1}' | xargs pip uninstall -y
      - name: Install from source distribution with PEP 517 required
        run: |
          pip install --use-pep517 --no-binary shadowsocks-manager shadowsocks-manager==${{ env.NEW_VERSION }}

  pypi-py2-install:
    runs-on: ubuntu-latest
    needs: [pypi-py2-build-and-upload, pypi-py3-build-and-upload]
    container:
      image: python:2.7
    env:
      NEW_VERSION: ${{ needs.pypi-py3-build-and-upload.outputs.new_version }}
    steps:
      - name: Install dependencies
        run: pip install --upgrade pip setuptools
      - name: Install from binary distribution
        run: |
          pip install --only-binary shadowsocks-manager shadowsocks-manager==${{ env.NEW_VERSION }}
      - name: Clean up for source distribution
        run: |
          pip list --exclude pip --exclude setuptools | awk 'NR>2 {print $1}' | xargs pip uninstall -y
      - name: Install from source distribution with setuptools
        run: |
          pip install --no-binary shadowsocks-manager shadowsocks-manager==${{ env.NEW_VERSION }}
